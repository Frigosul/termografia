generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  userRole  String
  createdAt DateTime @default(now())

  @@map("users")
}

enum InstrumentType {
  TEMPERATURE
  PRESSURE
}

model Instrument {
  id                     String           @id @default(uuid())
  name                   String
  slug                   String           @unique
  type                   InstrumentType
  model                  Int
  orderDisplay           Int              @default(autoincrement()) @map("order_display")
  maxValue               Float            @default(100) @map("max_value")
  minValue               Float            @default(-100) @map("min_value")
  isActive               Boolean          @default(true) @map("is_active")
  idSitrad               Int?             @map("id_sitrad")
  createdAt              DateTime         @default(now()) @map("created_at")
  updatedAt              DateTime         @updatedAt @map("updated_at")
  instrumentData         InstrumentData[]
  joinAsFirstInstrument  JoinInstrument[] @relation("FirstInstrument")
  joinAsSecondInstrument JoinInstrument[] @relation("SecondInstrument")

  @@map("instruments")
}

model InstrumentData {
  id           String     @id @default(uuid())
  data         Float
  editData     Float      @map("edit_data")
  generateData Float?     @map("generate_data")
  createdAt    DateTime   @default(now()) @map("created_at")
  updatedAt    DateTime   @updatedAt @map("updated_at")
  userEditData String?    @map("user_edit_data")
  instrumentId String     @map("instrument_id")
  instrument   Instrument @relation(fields: [instrumentId], references: [id])

  @@index([instrumentId, createdAt], map: "instrument_time_index")
  @@map("instrument_data")
}

model JoinInstrument {
  id                 String     @id @default(uuid())
  name               String     @unique
  firstInstrumentId  String     @map("first_instrument_id")
  secondInstrumentId String     @map("second_instrument_id")
  isActive           Boolean    @default(true)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @default(now())
  firstInstrument    Instrument @relation("FirstInstrument", fields: [firstInstrumentId], references: [id])
  secondInstrument   Instrument @relation("SecondInstrument", fields: [secondInstrumentId], references: [id])

  @@unique([firstInstrumentId, secondInstrumentId], name: "unique_instruments_pair")
  @@map("union_instruments")
}
